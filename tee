
# Fichier de configuration Nginx principal pour la plateforme Sublymus
# Généré le: 2025-05-19T07:03:55.984Z


# Application Globale: s_welcome sur sublymus-server.com
server {
    
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/sublymus-server.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sublymus-server.com/privkey.pem;
    # include /etc/nginx/snippets/ssl-params.conf; # Si tu as un fichier de paramètres SSL communs
    # Recommandé: Ajouter ici les paramètres ssl_protocols, ssl_ciphers, etc. ou les inclure via un snippet
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    # HSTS (décommenter après tests approfondis)
    # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
 # Utilise le certificat wildcard du domaine principal

    server_name sublymus-server.com;

    # location /.well-known/acme-challenge/ { # Garder pour le renouvellement si HTTP-01 utilisé pour ces domaines
    #     root /var/www/certbot_http_challenge_main; # Un chemin partagé avec Certbot
    # }

    location / {
        
        resolver 127.0.0.11 valid=10s; # Résolveur DNS interne de Docker Swarm
        set $target_service http://s_welcome:3003;

        proxy_pass $target_service;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off; # Peut être utile pour les applications avec SSE ou streaming

                    proxy_set_header x-base-url https://sublymus-server.com/;
            proxy_set_header x-server-url sublymus-server.com;

    }
}

# Redirection HTTP vers HTTPS pour cette application globale
server {
    listen 80;
    server_name sublymus-server.com;
    # location /.well-known/acme-challenge/ {
    #     root /var/www/certbot_http_challenge_main;
    # }
    # location / {
        return 301 https://$host$request_uri;
    # }
}

# Application Globale: s_dashboard sur dash.sublymus-server.com
server {
    
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/sublymus-server.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sublymus-server.com/privkey.pem;
    # include /etc/nginx/snippets/ssl-params.conf; # Si tu as un fichier de paramètres SSL communs
    # Recommandé: Ajouter ici les paramètres ssl_protocols, ssl_ciphers, etc. ou les inclure via un snippet
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    # HSTS (décommenter après tests approfondis)
    # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
 # Utilise le certificat wildcard du domaine principal

    server_name dash.sublymus-server.com;

    # location /.well-known/acme-challenge/ { # Garder pour le renouvellement si HTTP-01 utilisé pour ces domaines
    #     root /var/www/certbot_http_challenge_main; # Un chemin partagé avec Certbot
    # }

    location / {
        
        resolver 127.0.0.11 valid=10s; # Résolveur DNS interne de Docker Swarm
        set $target_service http://s_dashboard:3005;

        proxy_pass $target_service;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off; # Peut être utile pour les applications avec SSE ou streaming

        proxy_set_header x-target-api-service http://http://api_store_system;
            proxy_set_header x-base-url https://dash.sublymus-server.com/;
            proxy_set_header x-server-url sublymus-server.com;

    }
}

# Redirection HTTP vers HTTPS pour cette application globale
server {
    listen 80;
    server_name dash.sublymus-server.com;
    # location /.well-known/acme-challenge/ {
    #     root /var/www/certbot_http_challenge_main;
    # }
    # location / {
        return 301 https://$host$request_uri;
    # }
}

# Application Globale: s_docs sur docs.sublymus-server.com
server {
    
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/sublymus-server.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sublymus-server.com/privkey.pem;
    # include /etc/nginx/snippets/ssl-params.conf; # Si tu as un fichier de paramètres SSL communs
    # Recommandé: Ajouter ici les paramètres ssl_protocols, ssl_ciphers, etc. ou les inclure via un snippet
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    # HSTS (décommenter après tests approfondis)
    # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
 # Utilise le certificat wildcard du domaine principal

    server_name docs.sublymus-server.com;

    # location /.well-known/acme-challenge/ { # Garder pour le renouvellement si HTTP-01 utilisé pour ces domaines
    #     root /var/www/certbot_http_challenge_main; # Un chemin partagé avec Certbot
    # }

    location / {
        
        resolver 127.0.0.11 valid=10s; # Résolveur DNS interne de Docker Swarm
        set $target_service http://s_docs:3004;

        proxy_pass $target_service;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off; # Peut être utile pour les applications avec SSE ou streaming

                    proxy_set_header x-base-url https://docs.sublymus-server.com/;
            proxy_set_header x-server-url sublymus-server.com;

    }
}

# Redirection HTTP vers HTTPS pour cette application globale
server {
    listen 80;
    server_name docs.sublymus-server.com;
    # location /.well-known/acme-challenge/ {
    #     root /var/www/certbot_http_challenge_main;
    # }
    # location / {
        return 301 https://$host$request_uri;
    # }
}

# Application Globale: s_server sur server.sublymus-server.com
server {
    
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/sublymus-server.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sublymus-server.com/privkey.pem;
    # include /etc/nginx/snippets/ssl-params.conf; # Si tu as un fichier de paramètres SSL communs
    # Recommandé: Ajouter ici les paramètres ssl_protocols, ssl_ciphers, etc. ou les inclure via un snippet
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    # HSTS (décommenter après tests approfondis)
    # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
 # Utilise le certificat wildcard du domaine principal

    server_name server.sublymus-server.com;

    # location /.well-known/acme-challenge/ { # Garder pour le renouvellement si HTTP-01 utilisé pour ces domaines
    #     root /var/www/certbot_http_challenge_main; # Un chemin partagé avec Certbot
    # }

    location / {
        
        resolver 127.0.0.11 valid=10s; # Résolveur DNS interne de Docker Swarm
        set $target_service http://s_server:5555;

        proxy_pass $target_service;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off; # Peut être utile pour les applications avec SSE ou streaming

                    proxy_set_header x-server-url sublymus-server.com;

    }
}

# Redirection HTTP vers HTTPS pour cette application globale
server {
    listen 80;
    server_name server.sublymus-server.com;
    # location /.well-known/acme-challenge/ {
    #     root /var/www/certbot_http_challenge_main;
    # }
    # location / {
        return 301 https://$host$request_uri;
    # }
}


# Serveur principal pour sublymus-server.com (gère les slugs et la racine)
server {
    
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/sublymus-server.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sublymus-server.com/privkey.pem;
    # include /etc/nginx/snippets/ssl-params.conf; # Si tu as un fichier de paramètres SSL communs
    # Recommandé: Ajouter ici les paramètres ssl_protocols, ssl_ciphers, etc. ou les inclure via un snippet
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    # HSTS (décommenter après tests approfondis)
    # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;


    server_name sublymus-server.com;

    # Logs (optionnel)
    # access_log /var/log/nginx/platform_main.access.log;
    # error_log /var/log/nginx/platform_main.error.log;

    # Priorité aux slugs des stores
    
    # Store: by_ng_r_ytry (ID: 64b238d9-81d6-4139-833e-8009510d2fba) - Slug: /by_ng_r_ytry-1/
    # Cible: theme_caf39884-da4f-4cbb-ba23-45907f07d6c2:3334
    location ~ ^/by_ng_r_ytry-1(/.*)?$ { # ~ pour regex, (?...) pour optionnel trailing slash
        
        resolver 127.0.0.11 valid=10s; # Résolveur DNS interne de Docker Swarm
        set $target_service http://theme_caf39884-da4f-4cbb-ba23-45907f07d6c2:3334;

        proxy_pass $target_service;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off; # Peut être utile pour les applications avec SSE ou streaming

        proxy_set_header x-target-api-service http://api_store_64b238d9-81d6-4139-833e-8009510d2fba:3334;
            proxy_set_header x-base-url /by_ng_r_ytry-1/;
            proxy_set_header x-server-url sublymus-server.com;

        rewrite ^/by_ng_r_ytry-1(/.*)$ $1 break; # Enlève le /store-slug/
                       rewrite ^/by_ng_r_ytry-1$ / break;      # Gère la racine /store-slug/ -> /
    }

    # Store: cestsuperboutique (ID: acac96ff-894c-46e8-b7d6-304615de2232) - Slug: /cestsuperboutique/
    # Cible: theme_caf39884-da4f-4cbb-ba23-45907f07d6c2:3334
    location ~ ^/cestsuperboutique(/.*)?$ { # ~ pour regex, (?...) pour optionnel trailing slash
        
        resolver 127.0.0.11 valid=10s; # Résolveur DNS interne de Docker Swarm
        set $target_service http://theme_caf39884-da4f-4cbb-ba23-45907f07d6c2:3334;

        proxy_pass $target_service;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off; # Peut être utile pour les applications avec SSE ou streaming

        proxy_set_header x-target-api-service http://api_store_acac96ff-894c-46e8-b7d6-304615de2232:3334;
            proxy_set_header x-base-url /cestsuperboutique/;
            proxy_set_header x-server-url sublymus-server.com;

        rewrite ^/cestsuperboutique(/.*)$ $1 break; # Enlève le /store-slug/
                       rewrite ^/cestsuperboutique$ / break;      # Gère la racine /store-slug/ -> /
    }

    # Store: ladona (ID: 706696a0-f25c-4d47-ae53-b5792a4bdc9e) - Slug: /ladona-1/
    # Cible: theme_caf39884-da4f-4cbb-ba23-45907f07d6c2:3334
    location ~ ^/ladona-1(/.*)?$ { # ~ pour regex, (?...) pour optionnel trailing slash
        
        resolver 127.0.0.11 valid=10s; # Résolveur DNS interne de Docker Swarm
        set $target_service http://theme_caf39884-da4f-4cbb-ba23-45907f07d6c2:3334;

        proxy_pass $target_service;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off; # Peut être utile pour les applications avec SSE ou streaming

        proxy_set_header x-target-api-service http://api_store_706696a0-f25c-4d47-ae53-b5792a4bdc9e:3334;
            proxy_set_header x-base-url /ladona-1/;
            proxy_set_header x-server-url sublymus-server.com;

        rewrite ^/ladona-1(/.*)$ $1 break; # Enlève le /store-slug/
                       rewrite ^/ladona-1$ / break;      # Gère la racine /store-slug/ -> /
    }

    # Store: ladona1 (ID: 9b1192a3-0727-43a4-861b-05775bf2fd0d) - Slug: /ladona1/
    # Cible: theme_caf39884-da4f-4cbb-ba23-45907f07d6c2:3334
    location ~ ^/ladona1(/.*)?$ { # ~ pour regex, (?...) pour optionnel trailing slash
        
        resolver 127.0.0.11 valid=10s; # Résolveur DNS interne de Docker Swarm
        set $target_service http://theme_caf39884-da4f-4cbb-ba23-45907f07d6c2:3334;

        proxy_pass $target_service;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off; # Peut être utile pour les applications avec SSE ou streaming

        proxy_set_header x-target-api-service http://api_store_9b1192a3-0727-43a4-861b-05775bf2fd0d:3334;
            proxy_set_header x-base-url /ladona1/;
            proxy_set_header x-server-url sublymus-server.com;

        rewrite ^/ladona1(/.*)$ $1 break; # Enlève le /store-slug/
                       rewrite ^/ladona1$ / break;      # Gère la racine /store-slug/ -> /
    }


    # Emplacement racine pour le domaine principal
    location / {
        
        
        resolver 127.0.0.11 valid=10s; # Résolveur DNS interne de Docker Swarm
        set $target_service http://s_welcome:3003;

        proxy_pass $target_service;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off; # Peut être utile pour les applications avec SSE ou streaming

        proxy_set_header x-server-url sublymus-server.com;
            proxy_set_header x-base-url https://sublymus-server.com/;


    }
}

# Redirection HTTP vers HTTPS pour le domaine principal
server {
    listen 80;
    server_name sublymus-server.com;
    # location /.well-known/acme-challenge/ {
    #     root /var/www/certbot_http_challenge_main; # Assurez-vous que ce chemin existe et est servi
    # }
    # location / {
        return 301 https://$host$request_uri;
    # }
}

